spring.application.name=component-mybatis
server.port=10000

spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8

spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/test?useSSL=false&autoReconnect=true&failOverReadOnly=false&useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&tinyInt1isBit=false
spring.datasource.username=root
spring.datasource.password=123456

spring.datasource.hikari.connection-test-query=SELECT 1 FROM DUAL
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=24
spring.datasource.hikari.pool-name=${spring.application.name}-CP
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.leakDetectionThreshold=2000

# 以下是针对 MYSQL 驱动的配置参数
# 较新版本的 MySQL 支持服务器端准备好的语句，这可以提供实质性的性能提升
spring.datasource.hikari.useServerPrepStmts=true
# 缓存开关，如果这里设置为false，下面两个参数都不生效
spring.datasource.hikari.cachePrepStmts=true
# 在每个连接中缓存的语句的数量。默认值为保守值25。建议将其设置为250-500之间
spring.datasource.hikari.prepStmtCacheSize=250
# 缓存的已准备SQL语句的最大长度，默认值是256，但是往往这个长度不够用
spring.datasource.hikari.prepStmtCacheSqlLimit=2048


#mybatis.mapper-locations=classpath*:/mappers/*.xml
#mybatis.configuration.map-underscore-to-camel-case=true
#mybatis.configuration.cache-enabled=false
#mybatis.configuration.default-fetch-size=1000
#mybatis.configuration.default-statement-timeout=30
#mybatis.configuration.log-prefix=mybatis.

#pagehelper.autoRuntimeDialect=true
#pagehelper.reasonable=false


# mybatis-plus配置
# MyBatis Mapper 所对应的 XML 文件位置(,分隔，默认classpath*:/mapper/**/*.xml)
mybatis-plus.mapper-locations=classpath*:com/minister/**/infra/mapper/*.xml
# MyBaits 别名包扫描路径
mybatis-plus.type-aliases-package=com.minister.**/infra/entity
# 是否开启自动驼峰命名规则映射(默认true)
mybatis-plus.configuration.map-underscore-to-camel-case=true
# 大写命名,对表名和字段名均生效(默认false)
mybatis-plus.global-config.db-config.capital-mode=false
# 是否开启mybatis二级缓存(默认true)
mybatis-plus.configuration.cache-enabled=false
# 驱动的结果集获取数量
mybatis-plus.configuration.default-fetch-size=1000
# 数据库驱动等待数据库响应的秒数
mybatis-plus.configuration.default-statement-timeout=30
# sql日志
#mybatis-plus.configuration.log-prefix=mybatis.
mybatis-plus.configuration.log-impl=org.apache.ibatis.logging.slf4j.Slf4jImpl
# 全局的 entity 的逻辑删除字段属性名
mybatis-plus.global-config.db-config.logic-delete-field =
# 逻辑已删除值(默认1)
mybatis-plus.global-config.db-config.logic-delete-value=1
# 逻辑未删除值(默认0)
mybatis-plus.global-config.db-config.logic-not-delete-value=0

#spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#spring.datasource.druid.driver-class-name=com.mysql.cj.jdbc.Driver
## 初始化时建立物理连接的个数
#spring.datasource.druid.initial-size=10
## 最大连接池数量
#spring.datasource.druid.max-active=50
## 最小连接池数量
#spring.datasource.druid.min-idle=10
## 获取连接时最大等待时间，单位毫秒
#spring.datasource.druid.max-wait=30000
## 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭
#spring.datasource.druid.pool-prepared-statements=false
## 用来检测连接是否有效的sql。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
#spring.datasource.druid.validation-query=select 1
## 检测连接是否有效的超时时间，单位：秒。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
#spring.datasource.druid.validation-query-timeout=3000
## 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#spring.datasource.druid.test-on-borrow=false
## 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
#spring.datasource.druid.test-on-return=false
## 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
#spring.datasource.druid.test-while-idle=true
## 有两个含义：1) Destroy线程会检测连接的间隔时间，如果连接空闲时间大于等于minEvictableIdleTimeMillis则关闭物理连接。2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
#spring.datasource.druid.time-between-eviction-runs-millis=300000
## 连接保持空闲而不被驱逐的最小时间
#spring.datasource.druid.min-evictable-idle-time-millis=600000
## 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作
#spring.datasource.druid.keep-alive=true
## keep-alive间隔时间
#spring.datasource.druid.keep-alive-between-time-millis=600000
## 开启连接池回收，做了这个配置会降低性能，建议怀疑存在泄漏之后再打开
#spring.datasource.druid.remove-abandoned=false
## 事务自动提交
#spring.datasource.druid.default-auto-commit=true